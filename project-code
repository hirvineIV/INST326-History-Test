# INST326-History-Test


######reading in the file
import random


file=open('INST326Project_AnswerKey.txt','r')
question_dict={}
answer_dict={}
count=0
for line in file:
    if line[0]=='.':                   #'.' is the first element of the line, determining the type of question being asked, this one is multiple choice or True/False answers
        q_arr=line.split('?')          #separates the question from everything else in the line
        q=q_arr[0]                     #gets the first element of the split line, the question, and stores it in q
        q_arr.remove(q)                #deletes the question from the list
        question_dict[count]=q         #adds the question, q,  to the question dictionary 
        mult_answer=q_arr[0]
        answer_dict[count]=mult_answer       #adds the answer list to the answer dictionary
        count+=1
    elif line[0]=='*':                 #short answer. Going to have to compare answers in list to answers by user
        q_arr=line.split('?')
        q=q_arr[0]
        q_arr.remove(q)
        question_dict[count]=q
        answers=q_arr[0].split(',')
        answer_dict[count]=answers
        count+=1

###mainframe 


### Classes


class board():
    
    def __init__(self, board_size):
        self.board_size=board_size
    
    def create_board(self):
        return board_size
    
    def check_board_position(self,board_position):
        if board_position>=32:
            return('Congratulations you won!')
        elif board_position%6==0:
            print("Nice Roll! Move up one spot!")
            board_position+=1
            print('Your new position is: '+str(board_position))
        elif board_position%5==0:
            print("Ah you got unlucky! Move back one spot!")
            board_position-=1
            print('Your new position is: '+str(board_position))
        return board_position
class player():
    def __init__(self, questions):
        #self.name=name
        self.questions=questions
    def roll_dice(self):
        roll=random.randint(1,6)
        print('Nice! You got: '+str(roll))
        return(roll)
    
    def ask_question(self):
        a=random.randint(0,len(questions)-1)
        return(questions[a])
    def compare_answer(self,user_answer,correct_answer):
        if user_answer!=correct_answer:
            print('Sorry that is not correct. The correct answer was ' +correct_answer+'. Move back a spot.')
        else:
            print('Nice! You got the right answer.')
        return(user_answer==correct_answer)
    
        
