import codecs
import random
import Image
file=codecs.open('Project Questions.txt',encoding= 'utf-8').readlines()  #taken from https://stackoverflow.com/questions/40918503/how-to-read-a-utf-8-encoded-text-file-using-python
file2=open('Project Answers.txt',encoding='utf-8').read()
file3=open('images.txt').readlines()
question_dict={}
answer_dictA={}
answer_dictB={}
answer_dictC={}
correct_answers={}
image_dict={}
count=1
for line in file:
    if line[0].isdigit():             
        question_dict[count]=line[0:len(line)-1]         #adds the question, q,  to the question dictionary 
    elif line[0]=='A':
        answer_dictA[count]=line[0:len(line)-1]
    elif line[0]=='B':
        answer_dictB[count]=line[0:len(line)-1]
    elif line[0]=='C':
        answer_dictC[count]=line[0:len(line)-1]
        count+=1
    elif line[0]=='\n':
        answer_dictC[count]=''
        count+=1
count=1
for char in file2:
    correct_answers[count]=char
    count+=1
count=1
for line1 in file3:
    image_dict[count]=line1[0:len(line1)-1]
    count+=1

        









class board():
    
    def __init__(self, board_size):
        self.board_size=board_size
    
    def create_board(self):
        return self.board_size
    
    def check_board_position(self,board_position):
        if board_position>=self.board_size:
            print('Congratulations you won!')
            return board_position
        elif board_position%6==0:
            print("Great roll! Move up one spot!")
            board_position+=1
            print('Your new position is: '+str(board_position))
        elif board_position%5==0:
            print("Ah you got unlucky! Move back one spot!")
            board_position-=1
            print('Your new position is: '+str(board_position))
        return board_position
class player():
    def __init__(self, questions, answerA, answerB, answerC, CorrectAnswers, images):
        self.questions=questions
        self.answerA=answerA
        self.answerB=answerB
        self.answerC=answerC
        self.CorrectAnswers=CorrectAnswers
        self.answered_right=0
        self.questions_asked=0
        self.images=images
    def roll_dice(self):
        roll=random.randint(1,6)
        print('Nice! You rolled: '+str(roll))
        return(roll)
    def answer_question(self):
        a=input('What is your answer? Be sure to only put the letter of your answer choice. ').lower()
        return a
    def ask_question(self):
        a=random.randint(0,len(self.questions)-1)
        self.questions_asked+=1
        print(self.questions[a])
        print(self.answerA[a])
        print(self.answerB[a])
        print(self.answerC[a])
        return a
    def show_image(self, question_number):
        if self.images[question_number]=='':
            pass
        img=mpimg.imread(self.images[question_number])
        imgplot = plt.imshow(img)
        plt.show()
        
    def compare_answer(self,user_answer,question_number):
        correct_answer=self.CorrectAnswers[question_number]
        if user_answer!=correct_answer:
            print('Sorry that is not correct. The correct answer was ' +correct_answer+'. Try another question.')
        else:
            print('Correct! You got the right answer.')
            self.answered_right+=1
        return(user_answer==correct_answer)
    def score(self):
        print('You answered %d questions correctly out of %d!' % ( self.answered_right, self.questions_asked))
    
    
    
    
    
    
    
    
Me=player(question_dict,answer_dictA,answer_dictB,answer_dictC,correct_answers,image_dict)
game=board(10)
length=game.create_board()
position=0
t=True
while position<length:
    r=input("Want to roll? (Y/N) ").upper()
    if r=='N':
        break
    if t==True and r=='Y':
        position+=Me.roll_dice()
    position=game.check_board_position(position)
    if int(position)>=length:
        break
    print("Your current position is: " +str(position))
    print("Your question is...")
    print()
    q=Me.ask_question()
    Me.show_image(q)
    a=Me.answer_question()
    t=Me.compare_answer(a,q)
Me.score()


